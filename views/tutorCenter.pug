extends layout

block content
    .container-fluid
        .row
            .col-md-2
                p
                    button#testSRefresh.btn.btn-default(type='submit' onclick='getStudents();') Refresh Students
                p
                    button#testRRefresh.btn.btn-default(type='submit' onclick='getRequests();') Refresh Requests
                p
                    button#testTRefresh.btn.btn-default(type='submit' onclick='getTutors();') Refresh Tutors
            .col-md-4
                .row
                    .col-md-12
                        fieldset.tableBorder
                            legend.tableBorder Students
                                .insideLegend.insideStudentLegend
                                    table.table.table-striped.table-hover(id='studentTable')
                                        thead
                                            th Name
                                            th Course
                                            th Location
                                        tbody
                                            - for(var i = 0; i < students.length; i++)
                                                tr(data-id=students[i].id)
                                                    td #{students[i].name}
                                                    td #{students[i].course}
                                                    td #{students[i].location}
                                    ul#studentContextMenu.dropdown-menu
                                        li
                                            a(data-action='request') Request Tutor
                                        li
                                            a(data-action='changeLocation') Change Location
                                        li
                                            a(data-action='changeSubject') Change Subjects
                                        li.divider
                                        li
                                            a(data-action='studentSignOut') Sign Out
            .col-md-4
                if(requestsTable)
                    .row
                        .col-md-12
                            fieldset.tableBorder
                                legend.tableBorder Requests
                                    .insideLegend.insideRequestLegend
                                        table.table.table-striped.table-hover(id='requestsTable')
                                            thead
                                                th Name
                                                th Course
                                                th Location
                                                th Wait Time
                                                th Request
                                                th Tutor
                                            tbody
                                                - for(var i = 0; i < requests.length; i++)
                                                    tr(data-name=requests[i].name)
                                                        td #{requests[i].name}
                                                        td #{requests[i].course}
                                                        td #{requests[i].location}
                                                        td #{requests[i].waitTime}
                                                        td #{requests[i].request}
                                                        td #{requests[i].tutor}
                                        ul#requestContextMenu.dropdown-menu
                                            li
                                                a(data-action='beginTutoring') Begin Tutoring
                                            li
                                                a(data-action='finishTutoring') Finish Tutoring
                                            //li
                                                a(data-action='requestMaster') Request Master Tutor
                                            li.divider
                                            li
                                                a(data-action='deleteRequest') Delete Request
                if(tutorTable)
                    .row
                        .col-md-12
                            fieldset.tableBorder
                                legend.tableBorder Tutors
                                    button.btn.btn-default.btn-sm(id='#tutorSignInButton' data-toggle='modal', data-target='#tutorSignInModal' style='margin-left: 20px; margin-bottom: 5px') Tutor Sign In
                                    .insideLegend.insideTutorLegend
                                        table.table.table-striped.table-hover(id='tutorsTable')
                                            thead
                                                th Name
                                                th Login Time
                                            tbody
                                                - for(var i = 0; i < tutors.length; i++)
                                                    tr(data-id=tutors[i].id)
                                                        td #{tutors[i].name}
                                                        td #{tutors[i].loginTime}
                                        ul#tutorContextMenu.dropdown-menu
                                            li
                                                a(data-action='unrequestable') Become Unrequestable
                                            li.divider
                                            li
                                                a(data-action='clockOut') Clock Out
            .col-md-2

        if(scrollingText.enabled)
            .bottom-bar
                .scrollingText
                    h3 #{scrollingText.text}

        #tutorSignInModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='tutorSignInModalLabel', aria-hidden='true')
            .modal-dialog
                .modal-content
                    .modal-header
                        button.close(type='button', data-dismiss='modal')
                            span(aria-hidden='true') &times;
                            |
                            span.sr-only Close
                        h4#tutorSignInModalLabel.modal-title Please sign in to begin tutoring
                    .modal-body
                        form#tutorLoginForm(role='form' action='/tutorCenter/' + centerLocation method='post')
                            input(type='hidden' value=centerLocation name='center')
                            .form-group
                                label(for='tutorSignInID') Cabrillo ID
                                |
                                input#tutorSignInID.form-control(type='text', placeholder='ex.: edbrau1234' name='tutorId')
                            .form-group
                                label(for='tutorSignInPass') Password
                                |
                                input#tutorSignInPass.form-control(type='password', placeholder='Password' name='tutorPassword')
                            |
                            button#subTutorSignIn.btn.btn-primary(type='submit') Sign In
                            if(showTutorError)
                                span#tutorSignInError Invalid username or password

        #tutorRequestModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='tutorRequestModal', aria-hidden='true')
            .modal-dialog
                .modal-content
                    .modal-header
                        button.close(type='button', data-dismiss='modal')
                            span(aria-hidden='true') &times;
                            |
                            span.sr-only Close
                        h4#tutorRequestModalLabel.modal-title Please request a tutor
                    .modal-body
                        form#tutorRequestForm(role='form' action='requestTutor();' method='post')
                            input#reqStudentID(type='hidden' value='' name='reqStudentID')
                            .form-group
                                label(for='selectTutor') Select a tutor
                                |
                                select#selectTutor.form-control(name='selectTutor')
                                    - for (var i = 0; i < tutors.length; i++)
                                        option(value=tutors[i].id) #{tutors[i].name}
                            |
                            button#subTutorRequest.btn.btn-primary(type='submit') Submit Request


    if(showTutorError)
        script.
            $(document).ready(function () {
                $("#tutorSignInModal").modal();
            });

    script(src='/scripts/tutorCenterScript.js')

    script.
        var socket = io.connect('/#{centerLocation}'.replace(new RegExp(' ', 'g'), ''));
        socket.on('reload', function () {
            location.reload();
        });

        socket.on('getStudents', function () {
            getStudents();
        });

        socket.on('getRequests', function () {
            getRequests();
        });

        socket.on('getTutors', function () {
            getTutors();
        });

        function studentSignOut(studentId) {
            $.ajax({
                type: 'post',
                url: 'http://localhost:3000/tutorCenter/REST/studentSignOut',
                dataType: 'json',
                data: {
                    'center': '#{centerLocation}',
                    'studentId': studentId
                },
                success: function (data, status) {
                    //refreshStudentTable(data['students']);
                },
                complete: function (data, status) {
                    //alert(status);
                }
            });
        }

        function tutorSignOut(userId) {
            $.ajax({
                type: 'post',
                url: 'http://localhost:3000/tutorCenter/REST/tutorSignOut',
                dataType: 'json',
                data: {'center': '#{centerLocation}', 'userId': userId},
                success: function (data, status) {
                    //refreshStudentTable(data['students']);
                },
                complete: function (data, status) {
                    //alert(status);
                }
            });
        }

        // returns list of students from database
        function getStudents() {
            $.ajax({
                type: 'get',
                url: 'http://localhost:3000/tutorCenter/REST/getStudents',
                dataType: 'json',
                data: {'center': '#{centerLocation}'},
                success: function (data, status) {
                    refreshStudentTable(data['students']);
                },
                complete: function (data, status) {
                    //alert(status);
                }
            });
        }

        // returns list of requests from database
        function getRequests() {
            $.ajax({
                type: 'get',
                url: 'http://localhost:3000/tutorCenter/REST/getRequests',
                dataType: 'json',
                data: {'center': '#{centerLocation}'},
                success: function (data, status) {
                    refreshRequestsTable(data['requests']);
                },
                complete: function (data, status) {
                    //alert(status);
                }
            });
        }

        // returns list of tutors from database
        function getTutors() {
            $.ajax({
                type: 'get',
                url: 'http://localhost:3000/tutorCenter/REST/getTutors',
                dataType: 'json',
                data: {'center': '#{centerLocation}'},
                success: function (data, status) {
                    refreshTutorsTable(data['tutors']);
                    refreshTutorsList(data['tutors']);
                },
                complete: function (data, status) {
                    //alert(status);
                }
            });
        }

        function userExists(studentId, cb) {
            $.ajax({
                type: 'get',
                url: 'http://localhost:3000/tutorCenter/REST/userExists',
                dataType: 'json',
                data: {'studentId': studentId},
                success: function (data, status) {
                    cb(data['exists']);
                },
                complete: function (data, status) {
                    //alert(status);
                }
            });
        }

        function getClasses(studentId) {
            var $selectSubject = $('#selectSubject');
            $.ajax({
                type: 'get',
                url: 'http://localhost:3000/tutorCenter/REST/getClasses',
                dataType: 'json',
                data: {'center': '#{centerLocation}', 'studentId': studentId},
                success: function (data, status) {
                    $selectSubject.html("<option value='#'>-Select Subject-</option>");
                    for (var i = 0; i < data['classes'].length; i++) {
                        $selectSubject.append("<option value='" + data['classes'][i].id + "'>" + data['classes'][i].name + '</option>');
                    }
                },
                complete: function (data, status) {
                    //alert(status);
                }
            });
        }