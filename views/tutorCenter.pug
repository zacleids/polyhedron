extends layout

block content
    .container-fluid
        .row
            .col-md-2
                p
                    button#testSRefresh.btn.btn-default(type='submit' onclick='getStudents();') Refresh Students
                p
                    button#testRRefresh.btn.btn-default(type='submit' onclick='getRequests();') Refresh Requests
                p
                    button#testTRefresh.btn.btn-default(type='submit' onclick='getTutors();') Refresh Tutors
            .col-md-4
                .row
                    .col-md-12
                        fieldset.tableBorder
                            legend.tableBorder Students
                                .insideLegend.insideStudentLegend
                                    table.table.table-striped.table-hover(id='studentTable')
                                        thead
                                            th Name
                                            th Course
                                            th Location
                                        tbody
                                            - for(var i = 0; i < students.length; i++)
                                                tr(data-name=students[i].name)
                                                    td #{students[i].name}
                                                    td #{students[i].course}
                                                    td #{students[i].location}
                                    ul#studentContextMenu.dropdown-menu
                                        li
                                            a(data-action='request') Request Tutor
                                        li
                                            a(data-action='changeLocation') Change Location
                                        li
                                            a(data-action='changeSubject') Change Subjects
                                        li.divider
                                        li
                                            a(data-action='studentSignOut') Sign Out
            .col-md-4
                if(requestsTable)
                    .row
                        .col-md-12
                            fieldset.tableBorder
                                legend.tableBorder Requests
                                    .insideLegend.insideRequestLegend
                                        table.table.table-striped.table-hover(id='requestsTable')
                                            thead
                                                th Name
                                                th Course
                                                th Location
                                                th Wait Time
                                                th Request
                                                th Tutor
                                            tbody
                                                - for(var i = 0; i < requests.length; i++)
                                                    tr(data-name=requests[i].name)
                                                        td #{requests[i].name}
                                                        td #{requests[i].course}
                                                        td #{requests[i].location}
                                                        td #{requests[i].waitTime}
                                                        td #{requests[i].request}
                                                        td #{requests[i].tutor}
                                        ul#requestContextMenu.dropdown-menu
                                            li
                                                a(data-action='beginTutoring') Begin Tutoring
                                            li
                                                a(data-action='finishTutoring') Finish Tutoring
                                            li
                                                a(data-action='requestMaster') Request Master Tutor
                                            li.divider
                                            li
                                                a(data-action='deleteRequest') Delete Request
                if(tutorTable)
                    .row
                        .col-md-12
                            fieldset.tableBorder
                                legend.tableBorder Tutors
                                    .insideLegend.insideTutorLegend
                                        table.table.table-striped.table-hover(id='tutorsTable')
                                            thead
                                                th Name
                                                th Login Time
                                            tbody
                                                - for(var i = 0; i < tutors.length; i++)
                                                    tr(data-name=tutors[i].name)
                                                        td #{tutors[i].name}
                                                        td #{tutors[i].loginTime}
                                        ul#tutorContextMenu.dropdown-menu
                                            li
                                                a(data-action='unrequestable') Become Unrequestable
                                            li.divider
                                            li
                                                a(data-action='clockOut') Clock Out
            .col-md-2

        if(scrollingText.enabled)
            .bottom-bar
                .scrollingText
                    h3 #{scrollingText.text}

    script.
        var $studentTable = $("#studentTable");
        var $requestTable = $("#requestsTable");
        var $tutorsTable = $("#tutorsTable");

        var $contextMenuStudent = $("#studentContextMenu");
        var $contextMenuRequest = $("#requestContextMenu");
        var $contextMenuTutor = $("#tutorContextMenu");

        var tableData = "";
        var actionSelected = "";

        // Student Table Context Menu ***********************************
        // display the menu at the cursor position
        $("body").on("contextmenu", "#studentTable tr", function (e) {
            // hide the other context menus
            $contextMenuRequest.hide();
            $contextMenuTutor.hide();

            // get which row they clicked on
            tableData = $(this).attr("data-name");

            // display this context menu
            $contextMenuStudent.css({
                display: "block",
                left: e.pageX - $studentTable.offset().left + 15, //magic numbers
                top: e.pageY - $studentTable.offset().top + 20 //magic numbers
            });
            return false;
        });

        // hide the menu when you click a link in menu
        $contextMenuStudent.on("click", "a", function () {
            actionSelected = $(this).attr("data-action");
            alert("Student: " + tableData + ". Action: " + actionSelected);
            $contextMenuStudent.hide();
        });

        // Request Table Context Menu ***********************************
        // display the menu at the cursor position
        $("body").on("contextmenu", "#requestsTable tr", function (e) {
            // hide the other context menus
            $contextMenuStudent.hide();
            $contextMenuTutor.hide();

            // get which row they clicked on
            tableData = $(this).attr("data-name");

            // display this context menu
            $contextMenuRequest.css({
                display: "block",
                left: e.pageX - $requestTable.offset().left + 15, //magic numbers
                top: e.pageY - $requestTable.offset().top + 20 //magic numbers
            });
            return false;
        });

        // hide the menu when you click a link in menu
        $contextMenuRequest.on("click", "a", function () {
            actionSelected = $(this).attr("data-action");
            alert("Request: " + tableData + ". Action: " + actionSelected);
            $contextMenuRequest.hide();
        });

        // Tutor Table Context Menu ***********************************
        // display the menu at the cursor position
        $("body").on("contextmenu", "#tutorsTable tr", function (e) {
            // hide the other context menus
            $contextMenuStudent.hide();
            $contextMenuRequest.hide();

            // get which row they clicked on
            tableData = $(this).attr("data-name");

            // display this context menu
            $contextMenuTutor.css({
                display: "block",
                left: e.pageX - $tutorsTable.offset().left + 15, //magic numbers
                top: e.pageY - $tutorsTable.offset().top + 20 //magic numbers
            });
            return false;
        });

        // hide the menu when you click a link in menu
        $contextMenuTutor.on("click", "a", function () {
            actionSelected = $(this).attr("data-action");
            alert("Tutor: " + tableData + ". Action: " + actionSelected);
            $contextMenuTutor.hide();
        });

        // hide the menu on click anywhere else
        $("body").click(function () {
            $contextMenuStudent.hide();
            $contextMenuRequest.hide();
            $contextMenuTutor.hide();
        });

        var socket = io.connect('/#{centerLocation}'.replace(new RegExp(' ', 'g'), ''));
        socket.on('reload', function(){
            location.reload();
        });

        // returns list of students from database
        function getStudents() {
            $.ajax({
                type: 'get',
                url: 'http://localhost:3000/tutorCenter/REST/getStudents',
                dataType: 'json',
                data: {'center': '#{centerLocation}'},
                success: function (data, status) {
                    refreshStudentTable(data['students']);
                },
                complete: function (data, status) {
                    //alert(status);
                    //alert(JSON.stringify(data));
                }
            });
        }

        // redraw student table upon student sign in
        function refreshStudentTable(students) {
            // empty the table
            $('#studentTable tbody').html('');

            // re-draw the table
            var name = '';
            var course = '';
            var location = '';
            for (var row = 0; row < students.length; row++) {
                name = students[row].name;
                course = students[row].course;
                location = students[row].location;

                var rowData = '<tr>';
                rowData += ('<td>' + name + '</td>');
                rowData += ('<td>' + course + '</td>');
                rowData += ('<td>' + location + '</td>');
                rowData += '</tr>';

                $('#studentTable tbody').append(rowData);
            }
        }

        // returns list of requests from database
        function getRequests() {
            $.ajax({
                type: 'get',
                url: 'http://localhost:3000/tutorCenter/REST/getRequests',
                dataType: 'json',
                data: {},
                success: function (data, status) {
                    refreshRequestsTable(data['requests']);
                },
                complete: function (data, status) {
                    //alert(status);
                    //alert(JSON.stringify(data));
                }
            });
        }

        // redraw student table upon student sign in
        function refreshRequestsTable(requests) {
            // empty the table
            $('#requestsTable tbody').html('');

            // re-draw the table
            var name = '';
            var course = '';
            var location = '';
            var waitTime = '';
            var request = '';
            var tutor = '';

            for (var row = 0; row < requests.length; row++) {
                name = requests[row].name;
                course = requests[row].course;
                location = requests[row].location;
                waitTime = requests[row].waitTime;
                request = requests[row].request;
                tutor = requests[row].tutor;

                var rowData = '<tr>';
                rowData += ('<td>' + name + '</td>');
                rowData += ('<td>' + course + '</td>');
                rowData += ('<td>' + location + '</td>');
                rowData += ('<td>' + waitTime + '</td>');
                rowData += ('<td>' + request + '</td>');
                rowData += ('<td>' + tutor + '</td>');
                rowData += '</tr>';

                $('#requestsTable tbody').append(rowData);
            }
        }

        // returns list of tutors from database
        function getTutors() {
            $.ajax({
                type: 'get',
                url: 'http://localhost:3000/tutorCenter/REST/getTutors',
                dataType: 'json',
                data: {},
                success: function (data, status) {
                    refreshTutorsTable(data['tutors']);
                },
                complete: function (data, status) {
                    //alert(status);
                    //alert(JSON.stringify(data));
                }
            });
        }

        // redraw student table upon student sign in
        function refreshTutorsTable(tutors) {
            // empty the table
            $('#tutorsTable tbody').html('');

            // re-draw the table
            var name = '';
            var loginTime = '';
            for (var row = 0; row < tutors.length; row++) {
                name = tutors[row].name;
                loginTime = tutors[row].loginTime;

                var rowData = '<tr>';
                rowData += ('<td>' + name + '</td>');
                rowData += ('<td>' + loginTime + '</td>');
                rowData += '</tr>';

                $('#tutorsTable tbody').append(rowData);
            }
        }